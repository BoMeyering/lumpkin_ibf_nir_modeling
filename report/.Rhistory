panel.grid.minor.x = element_blank())
ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=1)+
theme_light()+
scale_fill_viridis_d('E')+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('E')+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('E')+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('E', begin=0.3, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('E', begin=0.3, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('C', begin=0.3, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('C', begin=0.2, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('D', begin=0.2, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('A', begin=0.2, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('B', begin=0.2, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('B', begin=0.2, end=0.9)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('C', begin=0.2, end=0.9)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('D', begin=0.2, end=0.9)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('D', begin=0.4, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('D', begin=0.2, end=0.8)+
# labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability', fill = 'Forage Yield')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d('D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d(option='D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability')+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d(option='D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability', fill="Germination")+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_data <- fread('../data/lumpkin_ibf_germination_test.csv')# %>%
mutate(sample_id = factor(sample_id)) %>%
arrange(desc(germination_pct), hard_pct) %>%
pivot_longer(cols = c(germination_pct, hard_pct), names_to = 'key', values_to='values')
# Read in the wet chemistry results
wetchem <- fread('../data/lumpkin_ibf_wet_chemistry_results.csv')
View(wetchem)
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
pivot_longer(cols = c(moisture_pct:nel_adf))
View(wetchem_longer)
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
pivot_longer(cols = c(moisture_pct:nel_adf), names_to='test', values_to='results')
View(wetchem_longer)
ggplot(wetchem_longer, aes(y=results))+
geom_histogram()
ggplot(wetchem_longer, aes(y=results))+
geom_density()
ggplot(wetchem_longer, aes(y=results, group=test))+
geom_density()
ggplot(wetchem_longer, aes(x=results, group=test, fill=test()))+
geom_density()
ggplot(wetchem_longer, aes(x=results, group=test, fill=test)+
geom_density()
)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(ncol=5, nrow=2)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(ncol=5, nrow=2)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(~test, ncol=5, nrow=2)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(~test)
?facet_grid
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(~test, rows=2, cols=5)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(~test, rows=2, cols=5)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_grid(~test, rows=2)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test)
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free')
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free')
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free')
# Descending yield boxplot
median_values = yield_data %>%
group_by(sample_id) %>%
summarize(median_yield = median(forage_yield_kg_ha))
yield_data <- yield_data %>%
left_join(median_values)
yield_plot = ggplot(yield_data, aes(x=reorder(sample_id, -forage_yield_kg_ha, FUN=median), y=forage_yield_kg_ha, fill=median_yield))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
yield_plot
# Descending yield boxplot
median_values = yield_data %>%
group_by(sample_id) %>%
summarize(median_yield = median(forage_yield_kg_ha))
yield_data <- yield_data %>%
left_join(median_values)
yield_plot = ggplot(yield_data, aes(x=reorder(sample_id, -forage_yield_kg_ha, FUN=median), y=forage_yield_kg_ha, fill=median_yield))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
yield_plot
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free')
crude_protein_plot = ggplot(wetchem, aes(x=reorder(sample_id, -crude_protein_pct, FUN=median), y=crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
crude_protein_plot
crude_protein_plot = ggplot(wetchem, aes(x=reorder(sample_name, -crude_protein_pct, FUN=median), y=crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
crude_protein_plot
crude_protein_plot = ggplot(wetchem, aes(x=reorder(sample_name, -crude_protein_pct, FUN=median), y=crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
# geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
crude_protein_plot
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free')
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
dplyr::select(-c(moisture_pct, dry_matter_pct)) %>%
pivot_longer(cols = c(moisture_pct:nel_adf), names_to='test', values_to='results')
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
dplyr::select(-c(moisture_pct, dry_matter_pct)) %>%
pivot_longer(cols = c(crude_protein_pct:nel_adf), names_to='test', values_to='results')
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free')
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free', nrow=2)
yield_plot
reticulate::repl_python()
library(reticulate)
use_python("/home/bomeyering/.pyenv/shims/python", required = TRUE)
use_python("/home/bomeyering/.pyenv/versions/3.11.8/envs/nir_env", required = TRUE)
use_python("/home/bomeyering/.pyenv/versions/3.11.8/envs/nir_env", required = TRUE)
py_config()  # Verify the configuration
py_discover_config()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts=FALSE, quietly=TRUE)
library(lme4, warn.conflicts=FALSE, quietly=TRUE)
# library(sommer, warn.conflicts=FALSE, quietly=TRUE)
library(emmeans, warn.conflicts = FALSE, quietly = TRUE)
library(data.table, warn.conflicts=FALSE, quietly=TRUE)
library(knitr)
library(kableExtra)
library(multcomp)
library(lmerTest)
# Read in trial layout and fix sample_name
trial_layout <- fread('../data/trial_layout_metadata.csv') %>%
mutate(sample_name = paste('LMP', plots, sep='-')) %>%
filter(!trts %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin')) %>%
dplyr::select(-V1) %>%
rename("sample_id" = "trts")
# Grab only unique sample_ids
sample_ids <- data.frame(sample_id = unique(trial_layout$sample_id))
# Read in germination data and rearrange
germination_data <- fread('../data/lumpkin_ibf_germination_test.csv') %>%
mutate(sample_id = factor(sample_id)) %>%
arrange(desc(germination_pct), hard_pct) %>%
right_join(sample_ids)
# Read in forage yield data, join to trial layout
yield_data <- fread('../data/lumpkin_ibf_forage_yield.csv') %>%
left_join(trial_layout, by='sample_name') %>%
dplyr::select(sample_name, sample_id, block, rep, row, column, forage_yield_kg_ha)
# Read in the wet chemistry results
wetchem <- fread('../data/lumpkin_ibf_wet_chemistry_results.csv')
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
dplyr::select(-c(moisture_pct, dry_matter_pct)) %>%
pivot_longer(cols = c(crude_protein_pct:nel_adf), names_to='test', values_to='results')
# Summarize the yield data
yield_summaries <- yield_data %>%
group_by(sample_id) %>%
summarize(mean_yield = mean(forage_yield_kg_ha, na.rm=TRUE),
sd_yield = sd(forage_yield_kg_ha, na.rm=TRUE),
n = n(),
se_yield = sd_yield / sqrt(n))
# Pivot germination_data longer
germination_long <- germination_data %>%
pivot_longer(cols = c(germination_pct, hard_pct), names_to = 'key', values_to='values')
# Example dataset
set.seed(123)
data <- data.frame(
Genotype = rep(paste0("G", 1:10), each=10),
Location = rep(paste0("Loc", 1:5), times=20),
Year = rep(2019:2020, each=5, times=10),
Yield = rnorm(100, mean=500, sd=50)
)
# BLUEs: Treat Genotype as a fixed effect
model_blue <- lm(Yield ~ Genotype + Location + Year, data=data)
blues <- emmeans(model_blue, ~ Genotype)
blues_df <- as.data.frame(blues)
print(blues_df)
# BLUPs: Treat Genotype as a random effect
model_blup <- lmer(Yield ~ Location + Year + (1 | Genotype), data=data)
blups <- ranef(model_blup)$Genotype
blups_df <- data.frame(Genotype=rownames(blups), BLUP=blups[,1])
print(blups_df)
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d(option='D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability', fill="Germination")+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d(option='D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability', fill="Germination")+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
trial_layout <- fread('../data/trial_layout_metadata.csv') %>%
mutate(sample_name = paste('LMP', plots, sep='-')) %>%
dplyr::select(-V1)
yield_data <- fread('../data/lumpkin_ibf_forage_yield.csv') %>%
left_join(trial_layout, by='sample_name') %>%
dplyr::select(sample_name, trts, block, rep, row, column, forage_yield_kg_ha) %>%
rename('sample_id' = 'trts')
yield_summaries <- yield_data %>%
group_by(sample_id) %>%
summarize(mean_yield = mean(forage_yield_kg_ha, na.rm=TRUE),
sd_yield = sd(forage_yield_kg_ha, na.rm=TRUE),
n = n(),
se_yield = sd_yield / sqrt(n))
yield_mm <- lmer(forage_yield_kg_ha ~ sample_id + (1|block), data=yield_data, )
anova(yield_mm)
summary(yield_mm)
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3))
kable(model_results, align = 'c')
# Descending yield boxplot
median_values = yield_data %>%
group_by(sample_id) %>%
summarize(median_yield = median(forage_yield_kg_ha))
yield_data <- yield_data %>%
left_join(median_values)
yield_plot = ggplot(yield_data, aes(x=reorder(sample_id, -forage_yield_kg_ha, FUN=median), y=forage_yield_kg_ha, fill=median_yield))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
yield_plot
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free', nrow=2)
crude_protein_plot = ggplot(wetchem, aes(x=reorder(sample_name, -crude_protein_pct, FUN=median), y=crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
# geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
crude_protein_plot
library(reticulate)
# use_python("/home/bomeyering/.pyenv/versions/3.11.8/envs/nir_env", required = TRUE)
py_config()  # Verify the configuration
reticulate::repl_python()
library(reticulate)
# use_python("/home/bomeyering/.pyenv/versions/3.11.8/envs/nir_env", required = TRUE)
py_config()  # Verify the configuration
reticulate::repl_python()
