sd_yield = sd(forage_yield_kg_ha, na.rm=TRUE),
n = n(),
se_yield = sd_yield / sqrt(n))
yield_mm <- lmer(forage_yield_kg_ha ~ sample_id + (1|block), data=yield_data, )
anova(yield_mm)
summary(yield_mm)
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3))
kable(model_results, align = 'c')
# Descending yield boxplot
median_values = yield_data %>%
group_by(sample_id) %>%
summarize(median_yield = median(forage_yield_kg_ha))
yield_data <- yield_data %>%
left_join(median_values)
yield_plot = ggplot(yield_data, aes(x=reorder(sample_id, -forage_yield_kg_ha, FUN=median), y=forage_yield_kg_ha, fill=median_yield))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
yield_plot
ggplot(wetchem_longer, aes(x=results, group=test, fill=test))+
geom_density()+
facet_wrap(~test, scales = 'free', nrow=2)
crude_protein_plot = ggplot(wetchem, aes(x=reorder(sample_name, -crude_protein_pct, FUN=median), y=crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
# geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
crude_protein_plot
ibf_predictions <- list("1mm" = NULL,
"10mm" = NULL)
file_list = dir('../model_output')
for (file_name in file_list) {
if (startsWith(file_name, 'ibf')) {
# Extract the forage sample size
forage_size = str_extract(file_name, "(?<=_)\\d+mm")
# Extract the forage trait
trait = str_extract(file_name, "(?<=ibf_).*?(?=_\\d+mm)")
file_path = file.path('../model_output', file_name)
predictions = fread(file_path)
# print(predictions)
predictions <- predictions %>%
rename(!!trait := 'value') # Rename the value column
if (is.null(ibf_predictions[[forage_size]])) {
ibf_predictions[[forage_size]] = predictions
} else {
ibf_predictions[[forage_size]] = ibf_predictions[[forage_size]] %>%
left_join(predictions)
}
}
}
ibf_1mm_summary <- ibf_predictions[['1mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
ibf_10mm_summary <- ibf_predictions[['10mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
write_csv(ibf_1mm_summary, 'ibf_1mm_predictions.csv')
write_csv(ibf_10mm_summary, 'ibf_10mm_predictions.csv')
# Descending yield boxplot
median_values = ibf_10mm_predictions %>%
group_by(sample_id) %>%
summarize_all(median)
# Descending yield boxplot
median_values = ibf_10mm_predictions %>%
group_by(sample_id) %>%
summarize_all(median)
# Descending yield boxplot
median_values = ibf_predictions[['10mm']] %>%
group_by(sample_id) %>%
summarize_all(median)
View(median_values)
# Descending yield boxplot
median_values = ibf_predictions[['10mm']] %>%
group_by(sample_name) %>%
summarize_all(median)
View(median_values)
View(ibf_10mm_summary)
View(trial_layout)
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(dplyr::select(trial_layout, sample_name, trts), sample_name)
View(ibf_10mm_summary)
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), sample_name)
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name')
View(median_values)
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
View(median_values)
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median)
View(median_values)
ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
print(ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts'))
ibf_10mm_summary = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) %>%
filter(!sample_id %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin'))
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
right_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) #%>%
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
right_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) #%>%
ibf_predictions <- list("1mm" = NULL,
"10mm" = NULL)
file_list = dir('../model_output')
for (file_name in file_list) {
if (startsWith(file_name, 'ibf')) {
# Extract the forage sample size
forage_size = str_extract(file_name, "(?<=_)\\d+mm")
# Extract the forage trait
trait = str_extract(file_name, "(?<=ibf_).*?(?=_\\d+mm)")
file_path = file.path('../model_output', file_name)
predictions = fread(file_path)
# print(predictions)
predictions <- predictions %>%
rename(!!trait := 'value') # Rename the value column
if (is.null(ibf_predictions[[forage_size]])) {
ibf_predictions[[forage_size]] = predictions
} else {
ibf_predictions[[forage_size]] = ibf_predictions[[forage_size]] %>%
left_join(predictions)
}
}
}
ibf_1mm_summary <- ibf_predictions[['1mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
ibf_10mm_summary <- ibf_predictions[['10mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
write_csv(ibf_1mm_summary, 'ibf_1mm_predictions.csv')
write_csv(ibf_10mm_summary, 'ibf_10mm_predictions.csv')
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
right_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) #%>%
View(median_values)
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
right_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) %>%
filter(!sample_id %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin'))
ibf_10mm_summary = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
cp_plot = ggplot(ibf_10mm_summary, aes(x=reorder(sample_id, -forage_yield_kg_ha, FUN=median), y=forage_yield_kg_ha, fill=median_yield))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
yield_plot
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) %>%
filter(!sample_id %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin'))
ibf_predictions <- list("1mm" = NULL,
"10mm" = NULL)
file_list = dir('../model_output')
for (file_name in file_list) {
if (startsWith(file_name, 'ibf')) {
# Extract the forage sample size
forage_size = str_extract(file_name, "(?<=_)\\d+mm")
# Extract the forage trait
trait = str_extract(file_name, "(?<=ibf_).*?(?=_\\d+mm)")
file_path = file.path('../model_output', file_name)
predictions = fread(file_path)
# print(predictions)
predictions <- predictions %>%
rename(!!trait := 'value') # Rename the value column
if (is.null(ibf_predictions[[forage_size]])) {
ibf_predictions[[forage_size]] = predictions
} else {
ibf_predictions[[forage_size]] = ibf_predictions[[forage_size]] %>%
left_join(predictions)
}
}
}
ibf_1mm_summary <- ibf_predictions[['1mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
ibf_10mm_summary <- ibf_predictions[['10mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
write_csv(ibf_1mm_summary, 'ibf_1mm_predictions.csv')
write_csv(ibf_10mm_summary, 'ibf_10mm_predictions.csv')
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) %>%
filter(!sample_id %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin'))
cp_plot = ggplot(ibf_10mm_summary, aes(x=reorder(sample_id, -crude_protein_pct, FUN=median), y=crude_protein_pct, fill=median_yield))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
cp_plot
cp_plot = ggplot(ibf_10mm_summary, aes(x=reorder(sample_id, -crude_protein_pct, FUN=median), y=crude_protein_pct, fill=median_values$crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
cp_plot
ibf_10mm_summary = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
ibf_predictions <- list("1mm" = NULL,
"10mm" = NULL)
file_list = dir('../model_output')
for (file_name in file_list) {
if (startsWith(file_name, 'ibf')) {
# Extract the forage sample size
forage_size = str_extract(file_name, "(?<=_)\\d+mm")
# Extract the forage trait
trait = str_extract(file_name, "(?<=ibf_).*?(?=_\\d+mm)")
file_path = file.path('../model_output', file_name)
predictions = fread(file_path)
# print(predictions)
predictions <- predictions %>%
rename(!!trait := 'value') # Rename the value column
if (is.null(ibf_predictions[[forage_size]])) {
ibf_predictions[[forage_size]] = predictions
} else {
ibf_predictions[[forage_size]] = ibf_predictions[[forage_size]] %>%
left_join(predictions)
}
}
}
ibf_1mm_summary <- ibf_predictions[['1mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
ibf_10mm_summary <- ibf_predictions[['10mm']] %>%
group_by(sample_name) %>%
summarize_all(mean) %>%
dplyr::select(-rep)
write_csv(ibf_1mm_summary, 'ibf_1mm_predictions.csv')
write_csv(ibf_10mm_summary, 'ibf_10mm_predictions.csv')
ibf_10mm_summary_df = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
cp_plot = ggplot(ibf_10mm_summary_df, aes(x=reorder(sample_id, -crude_protein_pct, FUN=median), y=crude_protein_pct, fill=median_values$crude_protein_pct))+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
cp_plot
View(ibf_10mm_summary_df)
cp_plot = ggplot(
ibf_10mm_summary_df,
aes(x=reorder(sample_id, -crude_protein_pct, FUN=median), y=crude_protein_pct)
)+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
geom_hline(yintercept=mean(yield_data$forage_yield_kg_ha), linewidth=1, linetype=4)+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
cp_plot
cp_plot = ggplot(
ibf_10mm_summary_df,
aes(x=reorder(sample_id, -crude_protein_pct, FUN=median), y=crude_protein_pct)
)+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
cp_plot
# Descending yield boxplot
median_values = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts') %>%
group_by(sample_id) %>%
summarize_all(median) %>%
filter(!sample_id %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin'))
ibf_10mm_summary_df = ibf_10mm_summary %>%
left_join(trial_layout %>% dplyr::select(c(sample_name, trts)), by='sample_name') %>%
dplyr::select(-sample_name) %>%
rename('sample_id' = 'trts')
cp_plot = ggplot(
ibf_10mm_summary_df,
aes(x=reorder(sample_id, -adf_pct, FUN=median), y=adf_pct)
)+
geom_boxplot()+
scale_fill_viridis_c(option='D')+
theme_light()+
labs(x = 'Accession', y='Forage Yield (kg/Ha)', fill = 'Forage Yield')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
cp_plot
knitr::opts_chunk$set(echo = TRUE)
install.packages('sommer')
library(tidyverse, warn.conflicts=FALSE, quietly=TRUE)
library(lme4, warn.conflicts=FALSE, quietly=TRUE)
library(sommer, warn.conflicts=FALSE, quietly=TRUE)
library(emmeans, warn.conflicts = FALSE, quietly = TRUE)
library(data.table, warn.conflicts=FALSE, quietly=TRUE)
library(knitr)
library(kableExtra)
library(multcomp)
library(lmerTest)
# Read in trial layout and fix sample_name
trial_layout <- fread('../data/trial_layout_metadata.csv') %>%
mutate(sample_name = paste('LMP', plots, sep='-')) %>%
filter(!trts %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin')) %>%
dplyr::select(-V1) %>%
rename("sample_id" = "trts")
# Grab only unique sample_ids
sample_ids <- data.frame(sample_id = unique(trial_layout$sample_id))
# Read in germination data and rearrange
germination_data <- fread('../data/lumpkin_ibf_germination_test.csv') %>%
mutate(sample_id = factor(sample_id)) %>%
arrange(desc(germination_pct), hard_pct) %>%
right_join(sample_ids)
# Read in forage yield data, join to trial layout
yield_data <- fread('../data/lumpkin_ibf_forage_yield.csv') %>%
left_join(trial_layout, by='sample_name') %>%
dplyr::select(sample_name, sample_id, block, rep, row, column, forage_yield_kg_ha)
# Read in the wet chemistry results
wetchem <- fread('../data/lumpkin_ibf_wet_chemistry_results.csv')
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
dplyr::select(-c(moisture_pct, dry_matter_pct)) %>%
pivot_longer(cols = c(crude_protein_pct:nel_adf), names_to='test', values_to='results')
# Summarize the yield data
yield_summaries <- yield_data %>%
group_by(sample_id) %>%
summarize(mean_yield = mean(forage_yield_kg_ha, na.rm=TRUE),
sd_yield = sd(forage_yield_kg_ha, na.rm=TRUE),
n = n(),
se_yield = sd_yield / sqrt(n))
# Pivot germination_data longer
germination_long <- germination_data %>%
pivot_longer(cols = c(germination_pct, hard_pct), names_to = 'key', values_to='values')
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3))
# Read in trial layout and fix sample_name
trial_layout <- fread('../data/trial_layout_metadata.csv') %>%
mutate(sample_name = paste('LMP', plots, sep='-')) %>%
filter(!trts %in% c('HI-GEST 660', 'Kura Clover', 'Sainfoin')) %>%
dplyr::select(-V1) %>%
rename("sample_id" = "trts")
# Grab only unique sample_ids
sample_ids <- data.frame(sample_id = unique(trial_layout$sample_id))
# Read in germination data and rearrange
germination_data <- fread('../data/lumpkin_ibf_germination_test.csv') %>%
mutate(sample_id = factor(sample_id)) %>%
arrange(desc(germination_pct), hard_pct) %>%
right_join(sample_ids)
# Read in forage yield data, join to trial layout
yield_data <- fread('../data/lumpkin_ibf_forage_yield.csv') %>%
left_join(trial_layout, by='sample_name') %>%
dplyr::select(sample_name, sample_id, block, rep, row, column, forage_yield_kg_ha)
# Read in the wet chemistry results
wetchem <- fread('../data/lumpkin_ibf_wet_chemistry_results.csv')
# Pivot wetchem longer
wetchem_longer <- wetchem %>%
dplyr::select(-c(moisture_pct, dry_matter_pct)) %>%
pivot_longer(cols = c(crude_protein_pct:nel_adf), names_to='test', values_to='results')
# Summarize the yield data
yield_summaries <- yield_data %>%
group_by(sample_id) %>%
summarize(mean_yield = mean(forage_yield_kg_ha, na.rm=TRUE),
sd_yield = sd(forage_yield_kg_ha, na.rm=TRUE),
n = n(),
se_yield = sd_yield / sqrt(n))
# Pivot germination_data longer
germination_long <- germination_data %>%
pivot_longer(cols = c(germination_pct, hard_pct), names_to = 'key', values_to='values')
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(test_rmse, 3),
`Train RMSE` = round(train_rmse, 3))
View(model_results)
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(test_rmse, 3),
`Train RMSE` = round(train_rmse, 3))
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3))
View(model_results)
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3)) %>%
arrange(`Forage Trait`, `Forage Size`)
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3)) %>%
arrange(`Forage Trait`, `Forage Size`) %>%
dplyr::select(`Forage Trait`, `Forage Size`, `Num. Components`, `Train RMSE`, `Test RMSE`)
# Read in the model outputs from mlflow runs
model_results = fread("../model_output/runs.csv") %>%
mutate(`Test RMSE` = round(`Test RMSE`, 3),
`Train RMSE` = round(`Train RMSE`, 3)) %>%
arrange(`Forage Trait`, desc(`Forage Size`)) %>%
dplyr::select(`Forage Trait`, `Forage Size`, `Num. Components`, `Train RMSE`, `Test RMSE`)
germination_plot <- ggplot(germination_long, aes(x=reorder(sample_id, -total_viable_pct), y=values, fill=key))+
geom_bar(stat = 'identity', position='stack', width=.9)+
theme_light()+
scale_fill_viridis_d(option='D', begin=0.2, end=0.8)+
labs(x = 'Accession', y='Total Viability', fill="Germination", title="Total Accession Seed Viability")+
ylim(min=0, max=100)+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
germination_plot
